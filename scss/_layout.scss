/* 
Layout Rules
	CSS, by its very nature, is used to lay elements out on the page.
However, there is a distinction between layouts dictating the major
and minor components of a page. The minor components—such as
a callout, or login form, or a navigation item—sit within the scope
of major components such as a header or footer. I refer to the minor
components as Modules and will dive into those in the next section.
The major components are referred to as Layout styles.
	Layout styles can also be divided into major and minor styles based
on reuse. Major layout styles such as header and footer are traditionally
styled using ID selectors but take the time to think about
the elements that are common across all components of the page
and use class selectors where appropriate.
*/

nav[role="navigation"] {
    background-color: $color;
    margin-bottom: $gutters;
    min-height: 25px;
}

header[role="banner"] {
    background-color: lighten($color,35%);
    color: #fff;
}

.banner-logo {
    box-sizing: border-box;
    float: left;
    padding: $gutters;
    width: 24%;
    @media (max-width: 480px) {
        width: 100%;
    }
}
//make sure svg file does not include height and width
.banner-logo svg {
    width: 100%;
}

.banner-text {  
    //box stays the same size, wrapped around content and fit inside the space listed
    box-sizing: border-box;
    //
    float: left;
    padding: $gutters;
    width:76%;
    //when the media (device) is 480px or smaller make the width 100% width insead of 24%
    @media (max-width: 480px) {
        width: 100%;
    }
}

.work {
    color: #f7086d;
    //inserting a background img
    background: url('../img/seattle.jpg') no-repeat center center;
    background-size: cover;
    height: 300px;
    width: auto;
    opacity: .5;
}

//clears float *make sure you add class to code
.group:after {
    clear: both;
    content: "";
    display: table;
}
